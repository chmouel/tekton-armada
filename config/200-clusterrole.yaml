kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: armadas-admin
  labels:
    armadas.chmouel.com/release: devel
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        armadas.chmouel.com/server: "true"
rules: [] # Rules are automatically filled in by the server manager.

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: armadas-core
  labels:
    armadas.chmouel.com/release: devel
    armadas.chmouel.com/server: "true"
rules:
  # Allow creating events associated with resources we are controlling.
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]

  # Allow the reconciliation of exactly our CRDs.
  # This is needed for us to patch in conversion webhook information.
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "update"]
    resourceNames: ["fire.armadas.chmouel.com"]

  # Allow us to reconcile our resources.
  - apiGroups: ["armadas.chmouel.com"]
    resources: ["*"]
    verbs: ["get", "list", "update", "watch"]

  # The webhook configured the namespace as the OwnerRef on various cluster-scoped resources,
  # which requires we can Get the system namespace.
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get"]
    resourceNames: ["armadas"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: armadas-resources
  labels:
    armadas.chmouel.com/release: devel
    armadas.chmouel.com/server: "true"
rules:
  # TODO: The resources we need
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "get", "list", "update", "delete", "watch"]
